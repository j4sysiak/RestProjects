server.port=8080
#server.servlet.context-path=/api/v1
#app.name=Employee Management Application
#app.version=1.0

# H2  local mode: http://localhost:8080/h2-console   jako database wpisujemy w okienku: jdbc:h2:mem:productdb
#spring.datasource.url=jdbc:h2:mem:productdb
#spring.h2.console.enabled=true
#login: sa
#has?o:   <naci?nij dwa razy enter i powinno wpó?ci?>


#H2 remote mode
spring.datasource.url=jdbc:h2:tcp://localhost/c:/devtools/H2/h2/bin/productdb
spring.h2.console.enabled=true
spring.datasource.username=sa
spring.datasource.password=sa123


#MySQL
#spring.datasource.url=jdbc:mysql://localhost:3306/springdatajpa2?useSSL=false&serverTimezone=UTC
#spring.datasource.username=root
#spring.datasource.password=Warszawa5584

spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect


#@EnableSwagger2   przyk?adowe wywo?anie //http://localhost:8080/api/v1/swagger-ui.html
spring.mvc.pathmatch.matching-strategy=ant-path-matcher
